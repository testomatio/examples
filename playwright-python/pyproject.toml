[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

[tool.isort]
profile = "black"
skip = ["env", "venv"]

[tool.poetry]
authors = ["nirtal85 <nirt236@gmail.com>"]
description = "Playwright Python example project with pytest and Testomatio report"
keywords = ["playwright", "automation", "testing", "web"]
name = "playwright-python"
packages = [{include = "playwright_python"}, {include = "pages"}]
readme = "README.md"
version = "0.1.0"

[tool.poetry.dependencies]
axe-playwright-python = "0.1.4"
playwright = "1.49.1"
pytest = "^7.0.0"
pytest-base-url = "2.1.0"
pytest-playwright = "0.7.0"
pytest-split = "0.10.0"
python = "^3.11"
requests = "2.32.3"
python-dotenv = "^1.0.1"
pytestomatio = { git = "https://github.com/testomatio/pytestomatio.git", branch = "master" }

[tool.poetry.group.dev.dependencies]
black = "25.1.0"
isort = "6.0.0"
pre-commit = "4.1.0"

[tool.pytest.ini_options]
addopts = [
  "-ra",
  "--color=yes",
  "--browser-channel=chrome",
  "--headed",
  "--video=on",
  "--screenshot=on",
  "--output=test-results"
]

log_cli = true
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_level = "INFO"
markers = [
  "random: marks tests that may randomly fail",
  "form: marks form related tests",
  "checkout: marks checkout related tests",
  "validation: marks validation related tests",
  "ui: marks UI related tests",
  "error: marks error related tests",
  "todo: marks todo related tests",
  "functional: marks functional tests"
]
